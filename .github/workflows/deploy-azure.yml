name: Deploy to Azure Container Apps

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: afsregistry.azurecr.io
  RESOURCE_GROUP: afs-rg
  API_CONTAINER_APP: afs-api
  WEB_CONTAINER_APP: afs-web
  LOCATION: westeurope

jobs:
  build-and-deploy-api:
    runs-on: ubuntu-latest
    name: Build and Deploy API

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build and push API Docker image
        run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/afs-api:${{ github.sha }} \
                       -t ${{ env.AZURE_CONTAINER_REGISTRY }}/afs-api:latest \
                       ./backend
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/afs-api:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/afs-api:latest

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy API to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: ${{ env.API_CONTAINER_APP }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}/afs-api:${{ github.sha }}
          targetPort: 8000
          environmentVariables: |
            DATA_DIR=/app/data/seed
            ARTIFACTS_DIR=/app/artifacts

  build-and-deploy-web:
    runs-on: ubuntu-latest
    name: Build and Deploy Web
    needs: build-and-deploy-api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get API URL
        id: get-api-url
        uses: azure/CLI@v1
        with:
          inlineScript: |
            API_URL=$(az containerapp show \
              --name ${{ env.API_CONTAINER_APP }} \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --query properties.configuration.ingress.fqdn \
              -o tsv)
            echo "API_URL=https://${API_URL}/api/v1" >> $GITHUB_OUTPUT

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build and push Web Docker image
        run: |
          docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/afs-web:${{ github.sha }} \
                       -t ${{ env.AZURE_CONTAINER_REGISTRY }}/afs-web:latest \
                       --build-arg VITE_API_BASE=${{ steps.get-api-url.outputs.API_URL }} \
                       ./frontend
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/afs-web:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/afs-web:latest

      - name: Deploy Web to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppName: ${{ env.WEB_CONTAINER_APP }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}/afs-web:${{ github.sha }}
          targetPort: 5173
          environmentVariables: |
            VITE_API_BASE=${{ steps.get-api-url.outputs.API_URL }}

      - name: Display URLs
        run: |
          echo "ðŸš€ Deployment successful!"
          echo "API URL: ${{ steps.get-api-url.outputs.API_URL }}"
          echo "Web URL: Check Azure Portal for the web app URL"
